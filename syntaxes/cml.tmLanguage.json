{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "OpenCML",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#numerics"
		},
		{
			"include": "#structures"
		},
		{
			"include": "#supports"
		},
		{
			"include": "#identifiers"
		},
		{
			"include": "#punctuations"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "entity.name.type.numeric.cml",
					"match": "\\b(int32|int64|float|double|int|real|number|bool|char|string)\\b"
				},
				{
					"name": "entity.name.type.prime.cml",
					"match": "\\b(set|map|list|dict|tuple|vector|tensor|any|void|functor)\\b"
				},
				{
					"name": "constant.language.cml",
					"match": "\\b(null|true|false)\\b"
				},
				{
					"name": "keyword.control.cml",
					"match": "\\b(type|with|func|this|return|let|use|as|is|if|else|for|while|from)\\b"
				},
				{
					"name": "storage.modifier.cml",
					"match": "\\b(inner|outer|atomic|static|sync)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.cml",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "character.escape.cml",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.cml",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "character.escape.cml",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.interpolated.cml",
					"begin": "`",
					"end": "`",
					"patterns": [
						{
							"name": "character.escape.cml",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.triple.cml",
					"begin": "\"\"\"",
					"end": "\"\"\""
				},
				{
					"name": "string.quoted.triple.cml",
					"begin": "'''",
					"end": "'''"
				},
				{
					"name": "string.quoted.triple.cml",
					"begin": "```",
					"end": "```"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.cml",
					"match": "//.*$"
				},
				{
					"name": "comment.line.number-sign.cml",
					"match": "# .*$"
				},
				{
					"name": "comment.block.documentation.cml",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"numerics": {
			"patterns": [
				{
					"name": "constant.numeric.real.cml",
					"match": "(\\-|\\+)?[\\d]+\\.[\\d]+(e(\\-|\\+)?[\\d]+)?"
				},
				{
					"name": "constant.numeric.integer.cml",
					"match": "(\\-|\\+)?[\\d]+(e(\\-|\\+)?[\\d]+)?"
				},
				{
					"name": "constant.numeric.complex.cml",
					"match": "(\\-|\\+)?[\\d]+\\.[\\d]+(e(\\-|\\+)?[\\d]+)?(\\-|\\+)[\\d]+\\.[\\d]+(e(\\-|\\+)?[\\d]+)?i"
				},
				{
					"name": "constant.numeric.complex.cml",
					"match": "(\\-|\\+)?[\\d]+(e(\\-|\\+)?[\\d]+)?(\\-|\\+)[\\d]+(e(\\-|\\+)?[\\d]+)?i"
				}
			]
		},
		"identifiers": {
			"patterns": [
				{
					"name": "variable.cml",
					"match": "\\b[a-zA-Z_]\\w*\\b"
				}
			]
		},
		"punctuations": {
			"patterns": [
				{
					"name": "variable.parameter.separator.cml",
					"match": "[\\(\\)\\{\\}\\[\\]<>;,=:@]"
				},
				{
					"name": "variable.parameter.operator.cml",
					"match": "->|:=|\\.|=>|\\+|\\-|\\*|/|\\^|%|\\||&|\\||<<|>>|>=|<=|==|!=|\\*=|/=|%=|\\+=|-="
				}
			]
		},
		"structures": {
			"patterns": [
				{
					"name": "entity.name.function.cml",
					"match": "(?<=\\bfunc\\b\\s+)[a-zA-Z_]\\w*"
				},
				{
					"name": "entity.name.type.cml",
					"match": "(?<=\\btype\\b\\s+)[a-zA-Z_]\\w*"
				},
				{
					"name": "entity.name.type.cml",
					"match": "(?<=:\\s*)[a-zA-Z_]\\w*"
				},
				{
					"name": "entity.name.type.cml",
					"match": "(?<=\\bfunc\\b.+->\\s*)[a-zA-Z_]\\w*"
				},
				{
					"name": "markup.italic.cml",
					"begin": "@",
					"end": "\\)|}|\\]|\\r?\\n",
					"patterns": [
						{
							"include": "#inners"
						}
					]
				}
			]
		},
		"supports": {
			"patterns": [
				{
					"name": "support.type.cml",
					"match": "\\b(module)\\b"
				},
				{
					"name": "support.function.io.cml",
					"match": "\\b(print|load|save|cml|json|xml)\\b"
				},
				{
					"name": "support.function.engine.cml",
					"match": "\\b(run|dispatch)\\b"
				},
				{
					"name": "support.function.analyze.cml",
					"match": "\\b(analyze|eye|hist)\\b"
				},
				{
					"name": "support.function.graphics.cml",
					"match": "\\b(set_link|set_port|set_bias)\\b"
				}
			]
		},
		"inners": {
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#numerics"
				},
				{
					"include": "#supports"
				},
				{
					"include": "#identifiers"
				},
				{
					"include": "#punctuations"
				}
			]
		}
	},
	"scopeName": "source.cml"
}